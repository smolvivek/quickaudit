import React, { useState } from 'react';
import {
  SafeAreaView,
  ScrollView,
  StatusBar,
  StyleSheet,
  Text,
  TouchableOpacity,
  View,
  Image,
  TextInput,
  FlatList,
  Dimensions,
  ActivityIndicator
} from 'react-native';

// Brand colors
const COLORS = {
  primary: '#3333FF',      // Dark blue for headers and primary buttons
  secondary: '#FFFFFF',    // White for backgrounds and containers
  accent: '#00C853',       // Green for highlights and action buttons
  text: '#333333',         // Dark text
  textLight: '#757575',    // Light text
  border: '#E0E0E0',       // Border color
  error: '#FF3D00',        // Error color
  warning: '#FFC107',      // Warning color
  success: '#00C853',      // Success color
  info: '#2196F3',         // Info color
  background: '#F5F5F5',   // Background color
};

export default function App() {
  const [currentScreen, setCurrentScreen] = useState('home');
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedAudit, setSelectedAudit] = useState(null);
  const [isLoading, setIsLoading] = useState(false);
  
  // Sample data for audits
  const audits = [
    { id: 1, title: 'Retail Store #123', date: '2025-05-15', status: 'Completed', score: 92 },
    { id: 2, title: 'Warehouse #456', date: '2025-05-20', status: 'In Progress', score: 78 },
    { id: 3, title: 'Distribution Center', date: '2025-05-25', status: 'Scheduled', score: null },
    { id: 4, title: 'Corporate Office', date: '2025-05-10', status: 'Completed', score: 88 },
  ];
  
  // Sample data for audit questions
  const auditQuestions = [
    { id: 1, question: 'Are all emergency exits clear and accessible?', category: 'Safety' },
    { id: 2, question: 'Is the inventory properly organized?', category: 'Organization' },
    { id: 3, question: 'Are all products correctly labeled?', category: 'Compliance' },
    { id: 4, question: 'Is the staff wearing proper uniforms?', category: 'Appearance' },
  ];

  // Sample data for reports
  const reports = [
    { id: 1, title: 'Monthly Compliance Report', date: '2025-05-01', type: 'Compliance' },
    { id: 2, title: 'Safety Audit Summary', date: '2025-04-15', type: 'Safety' },
    { id: 3, title: 'Quarterly Performance Review', date: '2025-04-01', type: 'Performance' },
  ];
  
  // Function to render the header with logo
  const renderHeader = () => {
    return (
      <View style={styles.header}>
        <Image 
          source={require('./assets/QuickAuditLogo.png')} 
          style={styles.logo} 
          resizeMode="contain" 
          defaultSource={require('./assets/QuickAuditLogo.png')}
        />
        <Text style={styles.headerTitle}>QuickAudit</Text>
      </View>
    );
  };

  // Function to render the search bar
  const renderSearchBar = () => {
    return (
      <View style={styles.searchContainer}>
        <View style={styles.searchInputWrapper}>
          <Image 
            source={{ uri: 'https://img.icons8.com/ios/50/000000/search--v1.png' }}
            style={styles.searchIcon}
            resizeMode="contain"
          />
          <TextInput
            style={styles.searchInput}
            placeholder="Search audits..."
            placeholderTextColor={COLORS.textLight}
            value={searchQuery}
            onChangeText={setSearchQuery}
          />
        </View>
      </View>
    );
  };
  
  // Function to render the navigation bar
  const renderNavBar = () => {
    return (
      <View style={styles.navBar}>
        <TouchableOpacity 
          style={[styles.navItem, currentScreen === 'home' && styles.navItemActive]} 
          onPress={() => setCurrentScreen('home')}
        >
          <Image 
            source={{ uri: 'https://img.icons8.com/ios/50/000000/home.png' }}
            style={[styles.navIcon, currentScreen === 'home' && styles.navIconActive]}
            resizeMode="contain"
          />
          <Text style={[styles.navText, currentScreen === 'home' && styles.navTextActive]}>Home</Text>
        </TouchableOpacity>
        
        <TouchableOpacity 
          style={[styles.navItem, currentScreen === 'audits' && styles.navItemActive]} 
          onPress={() => setCurrentScreen('audits')}
        >
          <Image 
            source={{ uri: 'https://img.icons8.com/ios/50/000000/checklist.png' }}
            style={[styles.navIcon, currentScreen === 'audits' && styles.navIconActive]}
            resizeMode="contain"
          />
          <Text style={[styles.navText, currentScreen === 'audits' && styles.navTextActive]}>Audits</Text>
        </TouchableOpacity>
        
        <TouchableOpacity 
          style={[styles.navItem, currentScreen === 'create' && styles.navItemActive]} 
          onPress={() => setCurrentScreen('create')}
        >
          <View style={styles.createButtonContainer}>
            <View style={styles.createButton}>
              <Text style={styles.createButtonText}>+</Text>
            </View>
          </View>
          <Text style={[styles.navText, currentScreen === 'create' && styles.navTextActive]}>Create</Text>
        </TouchableOpacity>
        
        <TouchableOpacity 
          style={[styles.navItem, currentScreen === 'reports' && styles.navItemActive]} 
          onPress={() => setCurrentScreen('reports')}
        >
          <Image 
            source={{ uri: 'https://img.icons8.com/ios/50/000000/combo-chart.png' }}
            style={[styles.navIcon, currentScreen === 'reports' && styles.navIconActive]}
            resizeMode="contain"
          />
          <Text style={[styles.navText, currentScreen === 'reports' && styles.navTextActive]}>Reports</Text>
        </TouchableOpacity>
        
        <TouchableOpacity 
          style={[styles.navItem, currentScreen === 'profile' && styles.navItemActive]} 
          onPress={() => setCurrentScreen('profile')}
        >
          <Image 
            source={{ uri: 'https://img.icons8.com/ios/50/000000/user-male-circle.png' }}
            style={[styles.navIcon, currentScreen === 'profile' && styles.navIconActive]}
            resizeMode="contain"
          />
          <Text style={[styles.navText, currentScreen === 'profile' && styles.navTextActive]}>Profile</Text>
        </TouchableOpacity>
      </View>
    );
  };

  // Render the main screen based on state
  const renderScreen = () => {
    switch (currentScreen) {
      case 'home':
        return renderHomeScreen();
      case 'audits':
        return renderAuditsScreen();
      case 'create':
        return renderCreateAuditScreen();
      case 'reports':
        return renderReportsScreen();
      case 'profile':
        return renderProfileScreen();
      case 'audit-detail':
        return renderAuditDetailScreen();
      default:
        return renderHomeScreen();
    }
  };
  
  // Home Screen
  const renderHomeScreen = () => {
    return (
      <ScrollView style={styles.scrollView}>
        <View style={styles.screenContainer}>
          <View style={styles.welcomeSection}>
            <Text style={styles.welcomeTitle}>Welcome to QuickAudit</Text>
            <Text style={styles.welcomeSubtitle}>Your comprehensive audit management solution</Text>
          </View>
          
          <View style={styles.quickActionsSection}>
            <Text style={styles.sectionTitle}>Quick Actions</Text>
            <View style={styles.cardGrid}>
              <TouchableOpacity 
                style={[styles.actionCard, { backgroundColor: COLORS.primary }]} 
                onPress={() => setCurrentScreen('audits')}
              >
                <Image 
                  source={{ uri: 'https://img.icons8.com/ios/50/ffffff/checklist.png' }}
                  style={styles.actionCardIcon}
                  resizeMode="contain"
                />
                <Text style={styles.actionCardTitle}>My Audits</Text>
                <Text style={styles.actionCardSubtitle}>View and manage your audits</Text>
              </TouchableOpacity>
              
              <TouchableOpacity 
                style={[styles.actionCard, { backgroundColor: COLORS.accent }]} 
                onPress={() => setCurrentScreen('create')}
              >
                <Image 
                  source={{ uri: 'https://img.icons8.com/ios/50/ffffff/plus-math.png' }}
                  style={styles.actionCardIcon}
                  resizeMode="contain"
                />
                <Text style={styles.actionCardTitle}>Create Audit</Text>
                <Text style={styles.actionCardSubtitle}>Start a new audit process</Text>
              </TouchableOpacity>
              
              <TouchableOpacity 
                style={[styles.actionCard, { backgroundColor: '#2196F3' }]} 
                onPress={() => setCurrentScreen('reports')}
              >
                <Image 
                  source={{ uri: 'https://img.icons8.com/ios/50/ffffff/combo-chart.png' }}
                  style={styles.actionCardIcon}
                  resizeMode="contain"
                />
                <Text style={styles.actionCardTitle}>Reports</Text>
                <Text style={styles.actionCardSubtitle}>View analytics and reports</Text>
              </TouchableOpacity>
              
              <TouchableOpacity 
                style={[styles.actionCard, { backgroundColor: '#FF9800' }]} 
                onPress={() => setCurrentScreen('profile')}
              >
                <Image 
                  source={{ uri: 'https://img.icons8.com/ios/50/ffffff/user-male-circle.png' }}
                  style={styles.actionCardIcon}
                  resizeMode="contain"
                />
                <Text style={styles.actionCardTitle}>My Profile</Text>
                <Text style={styles.actionCardSubtitle}>Manage your account</Text>
              </TouchableOpacity>
            </View>
          </View>
          
          <View style={styles.recentAuditsSection}>
            <View style={styles.sectionHeaderRow}>
              <Text style={styles.sectionTitle}>Recent Audits</Text>
              <TouchableOpacity onPress={() => setCurrentScreen('audits')}>
                <Text style={styles.viewAllLink}>View All</Text>
              </TouchableOpacity>
            </View>
            
            {audits.slice(0, 3).map(audit => (
              <TouchableOpacity 
                key={audit.id} 
                style={styles.auditCard}
                onPress={() => {
                  setSelectedAudit(audit);
                  setCurrentScreen('audit-detail');
                }}
              >
                <View style={styles.auditCardContent}>
                  <Text style={styles.auditCardTitle}>{audit.title}</Text>
                  <Text style={styles.auditCardDate}>Date: {audit.date}</Text>
                  <View style={styles.auditCardFooter}>
                    <Text 
                      style={[
                        styles.auditCardStatus, 
                        audit.status === 'Completed' ? styles.statusCompleted : 
                        audit.status === 'In Progress' ? styles.statusInProgress : 
                        styles.statusScheduled
                      ]}
                    >
                      {audit.status}
                    </Text>
                    
                    {audit.score !== null && (
                      <View style={[
                        styles.scoreContainer,
                        audit.score >= 90 ? styles.scoreHigh : 
                        audit.score >= 70 ? styles.scoreMedium : 
                        styles.scoreLow
                      ]}>
                        <Text style={styles.scoreText}>{audit.score}</Text>
                      </View>
                    )}
                  </View>
                </View>
              </TouchableOpacity>
            ))}
          </View>
        </View>
      </ScrollView>
    );
  };
  
  // Audits Screen
  const renderAuditsScreen = () => {
    return (
      <ScrollView style={styles.scrollView}>
        <View style={styles.screenContainer}>
          <View style={styles.screenHeader}>
            <Text style={styles.screenTitle}>My Audits</Text>
            <TouchableOpacity 
              style={styles.createAuditButton}
              onPress={() => setCurrentScreen('create')}
            >
              <Text style={styles.createAuditButtonText}>+ New Audit</Text>
            </TouchableOpacity>
          </View>
          
          {renderSearchBar()}
          
          <View style={styles.auditsFilterSection}>
            <TouchableOpacity style={[styles.filterButton, styles.filterButtonActive]}>
              <Text style={styles.filterButtonTextActive}>All</Text>
            </TouchableOpacity>
            <TouchableOpacity style={styles.filterButton}>
              <Text style={styles.filterButtonText}>Completed</Text>
            </TouchableOpacity>
            <TouchableOpacity style={styles.filterButton}>
              <Text style={styles.filterButtonText}>In Progress</Text>
            </TouchableOpacity>
            <TouchableOpacity style={styles.filterButton}>
              <Text style={styles.filterButtonText}>Scheduled</Text>
            </TouchableOpacity>
          </View>
          
          {audits.map(audit => (
            <TouchableOpacity 
              key={audit.id} 
              style={styles.auditCard}
              onPress={() => {
                setSelectedAudit(audit);
                setCurrentScreen('audit-detail');
              }}
            >
              <View style={styles.auditCardContent}>
                <Text style={styles.auditCardTitle}>{audit.title}</Text>
                <Text style={styles.auditCardDate}>Date: {audit.date}</Text>
                <View style={styles.auditCardFooter}>
                  <Text 
                    style={[
                      styles.auditCardStatus, 
                      audit.status === 'Completed' ? styles.statusCompleted : 
                      audit.status === 'In Progress' ? styles.statusInProgress : 
                      styles.statusScheduled
                    ]}
                  >
                    {audit.status}
                  </Text>
                  
                  {audit.score !== null && (
                    <View style={[
                      styles.scoreContainer,
                      audit.score >= 90 ? styles.scoreHigh : 
                      audit.score >= 70 ? styles.scoreMedium : 
                      styles.scoreLow
                    ]}>
                      <Text style={styles.scoreText}>{audit.score}</Text>
                    </View>
                  )}
                </View>
              </View>
            </TouchableOpacity>
          ))}
        </View>
      </ScrollView>
    );
  };
  
  // Create Audit Screen
  const renderCreateAuditScreen = () => {
    return (
      <ScrollView style={styles.scrollView}>
        <View style={styles.screenContainer}>
          <Text style={styles.screenTitle}>Create New Audit</Text>
          
          <View style={styles.formContainer}>
            <View style={styles.formGroup}>
              <Text style={styles.formLabel}>Audit Title</Text>
              <TextInput 
                style={styles.formInput}
                placeholder="Enter audit title"
                placeholderTextColor={COLORS.textLight}
              />
            </View>
            
            <View style={styles.formGroup}>
              <Text style={styles.formLabel}>Location</Text>
              <TextInput 
                style={styles.formInput}
                placeholder="Enter location"
                placeholderTextColor={COLORS.textLight}
              />
            </View>
            
            <View style={styles.formGroup}>
              <Text style={styles.formLabel}>Audit Date</Text>
              <TextInput 
                style={styles.formInput}
                placeholder="Select date"
                placeholderTextColor={COLORS.textLight}
              />
            </View>
            
            <View style={styles.formGroup}>
              <Text style={styles.formLabel}>Audit Type</Text>
              <View style={styles.formInput}>
                <Text style={styles.selectPlaceholder}>Select audit type</Text>
              </View>
            </View>
            
            <View style={styles.formGroup}>
              <Text style={styles.formLabel}>Audit Template</Text>
              <View style={styles.formInput}>
                <Text style={styles.selectPlaceholder}>Select template</Text>
              </View>
            </View>
            
            <TouchableOpacity style={styles.submitButton}>
              <Text style={styles.submitButtonText}>CREATE AUDIT</Text>
            </TouchableOpacity>
          </View>
        </View>
      </ScrollView>
    );
  };
  
  // Reports Screen
  const renderReportsScreen = () => {
    return (
      <ScrollView style={styles.scrollView}>
        <View style={styles.screenContainer}>
          <Text style={styles.screenTitle}>Reports & Analytics</Text>
          
          <View style={styles.reportsSummarySection}>
            <View style={styles.reportSummaryCard}>
              <Text style={styles.reportSummaryValue}>24</Text>
              <Text style={styles.reportSummaryLabel}>Total Audits</Text>
            </View>
            
            <View style={styles.reportSummaryCard}>
              <Text style={styles.reportSummaryValue}>18</Text>
              <Text style={styles.reportSummaryLabel}>Completed</Text>
            </View>
            
            <View style={styles.reportSummaryCard}>
              <Text style={styles.reportSummaryValue}>85%</Text>
              <Text style={styles.reportSummaryLabel}>Avg. Score</Text>
            </View>
          </View>
          
          <View style={styles.reportsListSection}>
            <Text style={styles.sectionTitle}>Available Reports</Text>
            
            {reports.map(report => (
              <TouchableOpacity key={report.id} style={styles.reportCard}>
                <View style={styles.reportCardContent}>
                  <Text style={styles.reportCardTitle}>{report.title}</Text>
                  <Text style={styles.reportCardDate}>Generated: {report.date}</Text>
                  <View style={styles.reportCardFooter}>
                    <Text style={styles.reportCardType}>{report.type}</Text>
                    <TouchableOpacity style={styles.downloadButton}>
                      <Text style={styles.downloadButtonText}>Download</Text>
                    </TouchableOpacity>
                  </View>
                </View>
              </TouchableOpacity>
            ))}
          </View>
        </View>
      </ScrollView>
    );
  };
  
  // Profile Screen
  const renderProfileScreen = () => {
    return (
      <ScrollView style={styles.scrollView}>
        <View style={styles.screenContainer}>
          <View style={styles.profileHeader}>
            <View style={styles.profileImageContainer}>
              <Image 
                source={{ uri: 'https://randomuser.me/api/portraits/men/32.jpg' }}
                style={styles.profileImage}
              />
            </View>
            <Text style={styles.profileName}>John Doe</Text>
            <Text style={styles.profileRole}>Audit Manager</Text>
          </View>
          
          <View style={styles.profileInfoSection}>
            <View style={styles.profileInfoItem}>
              <Text style={styles.profileInfoLabel}>Email</Text>
              <Text style={styles.profileInfoValue}>john.doe@example.com</Text>
            </View>
            
            <View style={styles.profileInfoItem}>
              <Text style={styles.profileInfoLabel}>Phone</Text>
              <Text style={styles.profileInfoValue}>+1 (555) 123-4567</Text>
            </View>
            
            <View style={styles.profileInfoItem}>
              <Text style={styles.profileInfoLabel}>Department</Text>
              <Text style={styles.profileInfoValue}>Quality Assurance</Text>
            </View>
            
            <View style={styles.profileInfoItem}>
              <Text style={styles.profileInfoLabel}>Location</Text>
              <Text style={styles.profileInfoValue}>New York, NY</Text>
            </View>
          </View>
          
          <View style={styles.profileActionsSection}>
            <TouchableOpacity style={styles.profileActionButton}>
              <Text style={styles.profileActionButtonText}>Edit Profile</Text>
            </TouchableOpacity>
            
            <TouchableOpacity style={[styles.profileActionButton, styles.logoutButton]}>
              <Text style={styles.logoutButtonText}>Logout</Text>
            </TouchableOpacity>
          </View>
        </View>
      </ScrollView>
    );
  };
  
  // Audit Detail Screen
  const renderAuditDetailScreen = () => {
    if (!selectedAudit) return null;
    
    return (
      <ScrollView style={styles.scrollView}>
        <View style={styles.screenContainer}>
          <View style={styles.auditDetailHeader}>
            <TouchableOpacity 
              style={styles.backButton}
              onPress={() => setCurrentScreen('audits')}
            >
              <Text style={styles.backButtonText}>← Back to Audits</Text>
            </TouchableOpacity>
            
            <Text style={styles.auditDetailTitle}>{selectedAudit.title}</Text>
            <Text style={styles.auditDetailDate}>Date: {selectedAudit.date}</Text>
            
            <View style={styles.auditDetailStatusRow}>
              <Text 
                style={[
                  styles.auditDetailStatus, 
                  selectedAudit.status === 'Completed' ? styles.statusCompleted : 
                  selectedAudit.status === 'In Progress' ? styles.statusInProgress : 
                  styles.statusScheduled
                ]}
              >
                {selectedAudit.status}
              </Text>
              
              {selectedAudit.score !== null && (
                <View style={[
                  styles.scoreDetailContainer,
                  selectedAudit.score >= 90 ? styles.scoreHigh : 
                  selectedAudit.score >= 70 ? styles.scoreMedium : 
                  styles.scoreLow
                ]}>
                  <Text style={styles.scoreDetailText}>Score: {selectedAudit.score}</Text>
                </View>
              )}
            </View>
          </View>
          
          <View style={styles.auditDetailSection}>
            <Text style={styles.sectionTitle}>Audit Questions</Text>
            
            {auditQuestions.map(question => (
              <View key={question.id} style={styles.questionItem}>
                <View style={styles.questionHeader}>
                  <Text style={styles.questionCategory}>{question.category}</Text>
                  {selectedAudit.status === 'Completed' ? (
                    <View style={styles.questionCompletedBadge}>
                      <Text style={styles.questionCompletedText}>Answered</Text>
                    </View>
                  ) : null}
                </View>
                <Text style={styles.questionText}>{question.question}</Text>
              </View>
            ))}
          </View>
          
          {selectedAudit.status !== 'Completed' && (
            <TouchableOpacity style={styles.continueAuditButton}>
              <Text style={styles.continueAuditButtonText}>
                {selectedAudit.status === 'In Progress' ? 'CONTINUE AUDIT' : 'START AUDIT'}
              </Text>
            </TouchableOpacity>
          )}
            <View style={styles.auditScore}>
              <Text style={styles.scoreText}>Score: 85%</Text>
            </View>
          </View>
        ))}
      </View>
    </View>
  );
  
  // Profile screen
  const renderProfileScreen = () => (
    <View style={styles.screenContainer}>
      <View style={styles.header}>
        <TouchableOpacity onPress={() => setCurrentScreen('home')}>
          <Text style={styles.backButton}>← Back</Text>
        </TouchableOpacity>
        <Text style={styles.headerTitle}>My Profile</Text>
      </View>
      
      <View style={styles.profileContainer}>
        <View style={styles.avatarContainer}>
          <View style={styles.avatar}>
            <Text style={styles.avatarText}>VM</Text>
          </View>
        </View>
        
        <Text style={styles.profileName}>Vivek Mangipudi</Text>
        <Text style={styles.profileEmail}>vivek@example.com</Text>
        
        <View style={styles.profileStats}>
          <View style={styles.statItem}>
            <Text style={styles.statValue}>12</Text>
            <Text style={styles.statLabel}>Audits</Text>
          </View>
          <View style={styles.statItem}>
            <Text style={styles.statValue}>85%</Text>
            <Text style={styles.statLabel}>Avg. Score</Text>
          </View>
          <View style={styles.statItem}>
            <Text style={styles.statValue}>Pro</Text>
            <Text style={styles.statLabel}>Plan</Text>
          </View>
        </View>
      </View>
    </View>
  );
  
  // Bottom navigation
  const renderBottomNav = () => (
    <View style={styles.bottomNav}>
      <TouchableOpacity 
        style={[styles.navItem, currentScreen === 'home' && styles.activeNavItem]} 
        onPress={() => setCurrentScreen('home')}
      >
        <Text style={styles.navText}>Home</Text>
      </TouchableOpacity>
      <TouchableOpacity 
        style={[styles.navItem, currentScreen === 'audits' && styles.activeNavItem]} 
        onPress={() => setCurrentScreen('audits')}
      >
        <Text style={styles.navText}>Audits</Text>
      </TouchableOpacity>
      <TouchableOpacity style={styles.navItem}>
        <Text style={styles.navText}>Reports</Text>
      </TouchableOpacity>
      <TouchableOpacity 
        style={[styles.navItem, currentScreen === 'profile' && styles.activeNavItem]} 
        onPress={() => setCurrentScreen('profile')}
      >
        <Text style={styles.navText}>Profile</Text>
      </TouchableOpacity>
    </View>
  );
  
  return (
    <SafeAreaView style={styles.container}>
      <StatusBar barStyle="dark-content" backgroundColor="#4CAF50" />
      <ScrollView
        contentInsetAdjustmentBehavior="automatic"
        style={styles.scrollView}>
        {renderScreen()}
      </ScrollView>
      {renderBottomNav()}
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#F5F5F5',
  },
  scrollView: {
    flex: 1,
  },
  screenContainer: {
    padding: 16,
    minHeight: '100%',
  },
  title: {
    fontSize: 32,
    fontWeight: 'bold',
    color: '#4CAF50',
    textAlign: 'center',
    marginTop: 20,
  },
  subtitle: {
    fontSize: 16,
    color: '#757575',
    textAlign: 'center',
    marginBottom: 30,
  },
  cardContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    justifyContent: 'space-between',
  },
  card: {
    backgroundColor: 'white',
    borderRadius: 8,
    padding: 16,
    marginBottom: 16,
    width: '48%',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  cardTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#4CAF50',
    marginBottom: 8,
  },
  cardSubtitle: {
    fontSize: 14,
    color: '#757575',
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 20,
  },
  backButton: {
    fontSize: 18,
    color: '#4CAF50',
    marginRight: 16,
  },
  headerTitle: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#212121',
  },
  auditList: {
    marginTop: 16,
  },
  auditItem: {
    backgroundColor: 'white',
    borderRadius: 8,
    padding: 16,
    marginBottom: 16,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  auditTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    color: '#212121',
    marginBottom: 8,
  },
  auditDate: {
    fontSize: 14,
    color: '#757575',
    marginBottom: 8,
  },
  auditStatus: {
    fontSize: 14,
    color: '#4CAF50',
    marginBottom: 8,
  },
  auditScore: {
    backgroundColor: '#E8F5E9',
    alignSelf: 'flex-start',
    paddingVertical: 4,
    paddingHorizontal: 8,
    borderRadius: 4,
  },
  scoreText: {
    color: '#4CAF50',
    fontWeight: 'bold',
  },
  profileContainer: {
    alignItems: 'center',
    marginTop: 20,
  },
  avatarContainer: {
    marginBottom: 16,
  },
  avatar: {
    width: 100,
    height: 100,
    borderRadius: 50,
    backgroundColor: '#4CAF50',
    justifyContent: 'center',
    alignItems: 'center',
  },
  avatarText: {
    fontSize: 36,
    fontWeight: 'bold',
    color: 'white',
  },
  profileName: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#212121',
    marginBottom: 8,
  },
  profileEmail: {
    fontSize: 16,
    color: '#757575',
    marginBottom: 24,
  },
  profileStats: {
    flexDirection: 'row',
    justifyContent: 'space-around',
    width: '100%',
    marginTop: 16,
  },
  statItem: {
    alignItems: 'center',
    padding: 16,
    backgroundColor: 'white',
    borderRadius: 8,
    width: '30%',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 2,
  },
  statValue: {
    fontSize: 20,
    fontWeight: 'bold',
    color: '#4CAF50',
    marginBottom: 4,
  },
  statLabel: {
    fontSize: 14,
    color: '#757575',
  },
  bottomNav: {
    flexDirection: 'row',
    backgroundColor: 'white',
    borderTopWidth: 1,
    borderTopColor: '#E0E0E0',
    height: 56,
  },
  navItem: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  activeNavItem: {
    borderTopWidth: 2,
    borderTopColor: '#4CAF50',
  },
  navText: {
    fontSize: 14,
    color: '#757575',
  },
});

// Export is already at the top of the file